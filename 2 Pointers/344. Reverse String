class Solution:
    def reverseString(self, s: List[str]) -> None:
        
          right = 0
          left = len(s) - 1
          temp = 0

          while (right < left):
                  temp = s[right]
                  s[right] = s[left]
                  s[left] = temp

                  right = right + 1
                  left = left - 1   

       
"""
        Do not return anything, modify s in-place instead.
        Restate the problem: you are given a word and have to make it backwards by using the 
        fixed size

        Input: s [] char
        Ouput: array 

        Constraints:
        1 <= s.length <= 105
        s[i] is a printable ascii character.

        Assumptions:
        We wont have to handle an empty array

        Egde cases:
        Input: s = ["h", "h"]
        Output: ["h", "h"]

        Input: s = ["d"]
        Output: ["d"]

        Mapping: 2 pointers
        Why: the pointers will be great for sawpping char with eachother

        1. create 2 pointers 
        left = end of the arr 
        right = beginning
        2. create a temp variable to hold the letter
        3. temp = r
        4  r = l  and l = temp
        5. continue iterating until the condition is met

        r = h l= o
        r = l
        r = o
          we have a temp , because the value of r will be lost 
          once we say r = l  
          h will longer be associated to r
          l can't get the letter h
  
"""
